{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport HomePage from '@/components/HomePage.vue';\nimport LoginPage from '@/components/LoginPage.vue';\nimport RegisterPage from '@/components/RegisterPage.vue';\nimport DashboardPage from '@/components/DashboardPage.vue';\nimport ImportSurveyPage from '@/components/ImportSurveyPage.vue';\nconst routes = [{\n  path: '/',\n  name: 'LoginPage',\n  component: LoginPage\n}, {\n  path: '/home',\n  name: 'HomePage',\n  component: HomePage\n}, {\n  path: '/login',\n  name: 'LoginPage',\n  component: LoginPage\n}, {\n  path: '/register',\n  name: 'RegisterPage',\n  component: RegisterPage\n}, {\n  path: '/dashboard',\n  name: 'DashboardPage',\n  component: DashboardPage,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/import-survey',\n  name: 'ImportSurveyPage',\n  component: ImportSurveyPage,\n  meta: {\n    requiresAuth: true\n  }\n}];\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\nrouter.beforeEach((to, from, next) => {\n  const requiresAuth = to.matched.some(record => record.meta.requiresAuth);\n  const isAuthenticated = localStorage.getItem('token');\n  if (requiresAuth && !isAuthenticated) {\n    next('/login');\n  } else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","HomePage","LoginPage","RegisterPage","DashboardPage","ImportSurveyPage","routes","path","name","component","meta","requiresAuth","router","history","beforeEach","to","from","next","matched","some","record","isAuthenticated","localStorage","getItem"],"sources":["D:/diego/documentos/GitHub/SD_final/frontend/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router';\r\nimport HomePage from '@/components/HomePage.vue';\r\nimport LoginPage from '@/components/LoginPage.vue';\r\nimport RegisterPage from '@/components/RegisterPage.vue';\r\nimport DashboardPage from '@/components/DashboardPage.vue';\r\nimport ImportSurveyPage from '@/components/ImportSurveyPage.vue';\r\n\r\nconst routes = [\r\n  { path: '/', name: 'LoginPage', component: LoginPage },\r\n  { path: '/home', name: 'HomePage', component: HomePage },\r\n  { path: '/login', name: 'LoginPage', component: LoginPage },\r\n  { path: '/register', name: 'RegisterPage', component: RegisterPage },\r\n  { path: '/dashboard', name: 'DashboardPage', component: DashboardPage, meta: { requiresAuth: true }},\r\n  { path: '/import-survey', name: 'ImportSurveyPage', component: ImportSurveyPage, meta: { requiresAuth: true }},\r\n];\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(),\r\n  routes,\r\n});\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n  const requiresAuth = to.matched.some(record => record.meta.requiresAuth);\r\n  const isAuthenticated = localStorage.getItem('token');\r\n  if (requiresAuth && !isAuthenticated) {\r\n    next('/login');\r\n  } else {\r\n    next();\r\n  }\r\n});\r\n\r\nexport default router;\r\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,QAAQ,MAAM,2BAA2B;AAChD,OAAOC,SAAS,MAAM,4BAA4B;AAClD,OAAOC,YAAY,MAAM,+BAA+B;AACxD,OAAOC,aAAa,MAAM,gCAAgC;AAC1D,OAAOC,gBAAgB,MAAM,mCAAmC;AAEhE,MAAMC,MAAM,GAAG,CACb;EAAEC,IAAI,EAAE,GAAG;EAAEC,IAAI,EAAE,WAAW;EAAEC,SAAS,EAAEP;AAAU,CAAC,EACtD;EAAEK,IAAI,EAAE,OAAO;EAAEC,IAAI,EAAE,UAAU;EAAEC,SAAS,EAAER;AAAS,CAAC,EACxD;EAAEM,IAAI,EAAE,QAAQ;EAAEC,IAAI,EAAE,WAAW;EAAEC,SAAS,EAAEP;AAAU,CAAC,EAC3D;EAAEK,IAAI,EAAE,WAAW;EAAEC,IAAI,EAAE,cAAc;EAAEC,SAAS,EAAEN;AAAa,CAAC,EACpE;EAAEI,IAAI,EAAE,YAAY;EAAEC,IAAI,EAAE,eAAe;EAAEC,SAAS,EAAEL,aAAa;EAAEM,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAAC,CAAC,EACpG;EAAEJ,IAAI,EAAE,gBAAgB;EAAEC,IAAI,EAAE,kBAAkB;EAAEC,SAAS,EAAEJ,gBAAgB;EAAEK,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAAC,CAAC,CAC/G;AAED,MAAMC,MAAM,GAAGb,YAAY,CAAC;EAC1Bc,OAAO,EAAEb,gBAAgB,CAAC,CAAC;EAC3BM;AACF,CAAC,CAAC;AAEFM,MAAM,CAACE,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC,MAAMN,YAAY,GAAGI,EAAE,CAACG,OAAO,CAACC,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACV,IAAI,CAACC,YAAY,CAAC;EACxE,MAAMU,eAAe,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EACrD,IAAIZ,YAAY,IAAI,CAACU,eAAe,EAAE;IACpCJ,IAAI,CAAC,QAAQ,CAAC;EAChB,CAAC,MAAM;IACLA,IAAI,CAAC,CAAC;EACR;AACF,CAAC,CAAC;AAEF,eAAeL,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}